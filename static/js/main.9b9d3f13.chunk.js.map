{"version":3,"sources":["theme.js","reducers/index.js","components/Home/index.js","components/GetStarted/index.js","components/App/index.js","serviceWorker.js","index.js","components/Home/index.module.css"],"names":["createMuiTheme","typography","useNextVariants","palette","primary","main","contrastText","secondary","combineReducers","withStyles","theme","button","margin","spacing","unit","startBtn","backgroundColor","border","color","fontSize","padding","textTransform","width","&:hover","readMoreBtn","linkIcon","marginRight","_ref","classes","react_default","a","createElement","className","styles","container","Button_default","variant","size","classnames","component","Link","to","SvgIcon_default","d","GetStarted","connect","react_router","exact","path","Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","history","createBrowserHistory","middleware","routerMiddleware","thunkMiddleware","store","createStore","Object","assign","rootReducer","router","connectRouter","compose","applyMiddleware","apply","ReactDOM","render","es","esm","components_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.9b9d3f13.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      main: '#ffcc33',\n      contrastText: '#fff',\n    },\n    secondary: {\n      main: '#ffb347',\n      contrastText: '#fff',\n    },\n  },\n});\n","import { combineReducers } from 'redux';\n\nexport default combineReducers({});\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport classnames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport styles from './index.module.css';\n\nconst classes = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  startBtn: {\n    backgroundColor: '#fff',\n    border: 0,\n    color: '#ffcc33',\n    fontSize: '20px',\n    padding: '10px',\n    textTransform: 'initial',\n    width: '200px',\n    '&:hover': {\n      backgroundColor: '#f8f8f8',\n      border: 0,\n    },\n  },\n  readMoreBtn: {\n    color: '#fff',\n  },\n  linkIcon: {\n    marginRight: '5px',\n  }\n});\n\nconst Home = ({ classes }) => (\n  <div className={styles.container}>\n    <h1>\n      Find the best matching<br/>\n      gamification framework<br/>\n      for your project\n    </h1>\n    <div>\n      <Button\n        variant=\"outlined\"\n        size=\"large\"\n        color=\"primary\"\n        className={classnames(classes.button, classes.startBtn)}\n        component={Link}\n        to=\"/get-started\"\n      >\n        Get started\n      </Button>\n      <Button\n        className={classnames(classes.button, classes.readMoreBtn)}\n      >\n        <SvgIcon className={classes.linkIcon}>\n          <path d=\"m19.818 8.9715c-1.4849-1.4849-3.8891-1.2021-5.9397-1.2728 0.14142 0.14142 0.42426 0.28284 0.6364 0.49497 0.35355 0.35355 0.6364 0.77782 0.84853 1.2728 1.1314 0 2.3335-0.070711 3.182 0.77782 0.42426 0.42426 0.70711 1.1314 0.77782 1.7678 0 1.4142-1.1314 2.5456-2.5456 2.5456h-3.677c-0.56568 0-1.3435-0.35355-1.7678-0.77782-0.98995-0.98995-0.84853-2.1213-0.42426-3.2527h-1.8385c-0.49497 1.6263-0.42426 3.2527 0.84853 4.5255 0.84853 0.84853 1.9799 1.2728 3.0406 1.2021h3.677c1.2728 0 2.4749-0.35355 3.3941-1.2728 1.4142-1.6971 1.3435-4.4548-0.21213-6.0104zm-11.597 5.5154h-1.2728c-0.56569 0-1.3435-0.35355-1.7678-0.77782-0.42426-0.42426-0.70711-1.1314-0.77782-1.7678 0-1.4142 1.2021-2.6163 2.5456-2.5456h3.677c0.56568 0 1.3435 0.35355 1.7678 0.77782 0.98995 0.98995 0.77782 2.192 0.42426 3.2527h1.8385c0.49498-1.6263 0.42426-3.2527-0.84853-4.5255-0.84853-0.84853-1.9799-1.2728-3.0406-1.2021h-3.677c-2.4042 0-4.3134 1.9092-4.2426 4.2426 0 2.2627 1.9092 4.3134 4.1719 4.1719h2.687c-0.28284-0.14142-0.49497-0.35355-0.70711-0.56568-0.35355-0.35355-0.6364-0.6364-0.77782-1.0607z\"/>\n        </SvgIcon>\n        Read more\n      </Button>\n    </div>\n  </div>\n);\n\nexport default withStyles(classes)(Home);\n","// import React from 'react';\n\nconst GetStarted = () => null;\n\nexport default GetStarted;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport Home from '../Home';\nimport GetStarted from '../GetStarted';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/get-started\" component={GetStarted} />\n    </Switch>\n  );\n}\n\nexport default connect()(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, combineReducers,createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunkMiddleware from 'redux-thunk';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport theme from './theme';\nimport rootReducer from './reducers';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nconst history = createBrowserHistory({});\n\nconst middleware = [\n  routerMiddleware(history),\n  thunkMiddleware,\n];\n\nif (process.env.NODE_ENV === 'development') {\n  const { createLogger } = require('redux-logger');\n\n  middleware.push(\n    createLogger({ collapsed: true })\n  );\n}\n\nconst store = createStore(\n  combineReducers(\n    Object.assign({}, rootReducer, {\n      router: connectRouter(history),\n    })\n  ),\n  compose(applyMiddleware(...middleware))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <MuiThemeProvider theme={theme}>\n        <App />\n      </MuiThemeProvider>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3VlUm\"};"],"sourceRoot":""}